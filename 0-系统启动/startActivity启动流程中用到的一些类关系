1.zygoye是什么？有什么作用 
	答：zygote英文翻译是“孵化”，在了解zygote之前首先我们需要知道我们进程是如何创建的，
	我们安卓设备内核使用的是linux内核，
	开机先是启动一个init进程，在init进程中会创建一个zygote进程，
	zygote进程会启动java虚拟机并注册java-native 的jni方法，通过jni调用到java层的ZygoteInit，在这个类里面会注册一个ServerSocket用于设备创建应用进程的需要。
	当启动一个应用需要创建一个进程时，会调用到这个ServerSocket的创建进程流程，主要是通过fork的方式创建进程，这样子进程就拥有了父进程所有的资源，
	fork会返回两次，当返回的pid=0时说明现在是处于子进程，继续处理子进程流程就可以了。如果是SystemServer进程，则会启动各类服务，包括AMS,WMS等系统服务。
	按上面所讲，zygote就是作为创建子进程的一个孵化器。
2.SystemServer是什么？有什么作用？它与zygote的关系是什么？
	答：SystemServer是一个由zygotefork出来的子进程，该进程主要作用是创建创建binder线程池和启动android运行需要的诸多系统服务，比如：AMS，PMS，WMS等并启动系统Launcher
	
3.ActivityManagerService是什么？什么时候初始化的？有什么作用？
    答：ActivityManagerService，简称AMS，服务端对象，负责统一调度系统中四大组件的生命周期。
	ActivityManagerService进行初始化的时机很明确，就是在SystemServer进程开启的时候，就会初始化ActivityManagerService
	APP和AMS其实是通过binder进行通讯的。
	下面讲解下binder机制。
	binder其实是进程间通信的一种方式，在linux进程中有socket，管道，共享内存，消息队列等方式，
	而由于binder对性能消耗低和安全性方面的考虑，android大量的使用了binder通讯 ，可以说binder是android的基石。
	下面来讲下binder模型：
	首先我们binder是通过CS架构进行设计的：Client和Service
	先搞懂三个概念：client，server和serverManger
	server通过binder通讯将自己注册到serverManager中，client通过binder获取serverManager中注册的server，
	其实是获取一个handle，通过这个handle就可以在bidner驱动中找找到server进程和需要处理的方法地址等信息。
	从而间接实现了进程间通讯，这个是binder的一个简要概述，详细的需要去了解binder驱动实现原理。
4.Launcher是什么？什么时候启动的？
	答：Launcher也是一个应用app，是在SystemServer启动的时候，启动的一个应用
	
5.Instrumentation是什么？和ActivityThread是什么关系？
	答：Instrumentation是一个沟通Activity和AMS以及ActivityThread和Activity中间桥梁工具类
	例如：Activity.startActivity
			->mInstrumentation.execStartActivity
			->ActivityManagerService.startActivity->ActivityThread.thread.scheduleLaunchActivity
			->ActivityThread.handleLaunchActivity
			->mInstrumentation.callActivityOnCreate
		
	
	