哈希表
1.什么是哈希表
通过把key值使用一种哈希算法，将key值映射为数组中的一个索引，通过这个索引来获取value值，以加快查找速度
这个哈希算法就是散列函数
存放记录的数组就是散列表
2.
数组特点：寻址容易，插入和删除困难
链表特点：插入和删除容易，寻址难

使用拉链法可以将二者的特点结合起来：

即通过key值使用哈希算法，算出一个索引，索引/数组的长度 即为一个值的索引位置，索引是在数组范围内，使用哈希算法算出来的索引值可能相同可能不同
如果相同的情况我们就说发生了哈希碰撞，这个时候，新的node节点会转变为链表形式，最终变为整体是以数组的形式，但是数组节点会以链表形式存在


哈希的应用：
1.加密算法如MD5
2.查找，HashMap HashTable 
3.Hash表在海量数据处理中有着广泛应用。
哈希表的查找步骤:
1.存储记录：将字符串转换为散列地址，索引
2.查找记录：使用相同的哈希算法找到散列地址，获取地址里面的值

优点：
查找速度快，编程实现容易
缺点
基于数组实现，数组创建后，难于扩展，在数组被填满后会，性能下降明显，程序必须清楚自己需要放入多少个数据元素。可能会使用到扩容，这个过程是一个耗时的过程

三种散列表实现：
1.除法散列法
index = value % 16 
2.平方散列法
index = (value * value) >> 28
可以获取一个比较均匀的数组
缺点是value很大时可能是引起溢出
3.斐波那契（Fibonacci）散列法
1，对于16位整数而言，这个乘数是40503 
2，对于32位整数而言，这个乘数是2654435769 
3，对于64位整数而言，这个乘数是11400714819323198485
对我们常见的32位整数而言，公式： 
	index = (value * 2654435769) >> 28
	


