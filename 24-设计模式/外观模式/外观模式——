外观模式
1.定义：
	现实生活中存在很多办事复杂的例子，如办房产证或者注册公司，等需要同多个部分交互，这个时候，如果有一个综合部门能解决一切手续就好了

	软件设计也是这样，如果系统功能越来越强，子系统功能越来越多，客户对系统的访问也变得越来越复杂，如果子系统发生了更改，可能就需要客户端也发生更改，
	这个情况违反了开闭原则，所以有需要对子系统使用一个统一的接口，在子系统更改的情况下，客户端因为调用的是统一接口，所以不需要更改客户端即可达到更改子系统的目的
	这个时候就可以使用外观模式
2.结构
	1.外观角色
	2.子系统，一把存在多个子系统
	3.客户端
3.优点：
	1.降低子系统和客户端的耦合度，使得子系统的改变不会影响客户端
	2.方便系统移植
4.使用场景
	1.统一sdk接口，方便平台之间的移植
	2.使用分层结构构件系统，给各系统提供一个统一的接口，降低客户端和子系统之间的耦合程度
	