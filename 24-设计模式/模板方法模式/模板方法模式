模板方法模式
设计一个系统时，我们知道算法实现所需要的关键步骤，也知道实现顺序，但是里面具体的步骤可能和环境有关系，并没有自己实现
如：
1.去银行办理业务，需要四个步骤：取号，排队，业务办理，业务员评分
其中取号，排队，业务评分都是可以统一放在父类中处理，但是业务办理根据客户需求实现，如可能是转账，取款，存款等，可以放在子类中实现
2.我们每天起床，吃饭，做事，睡觉。其中起床，吃饭，睡觉，可以放在父类中统一处理，但是做事可能就因人而异，做什么事可以放到子类中去实现等


定义
定义个算法的骨架，将一些可变的步骤放到子类中延迟实现，使得在不改变算法的结构情况下重定义该算法的特定步骤

特点

结构
1.抽象类或者抽象模板
包含：抽象方法，具体方法，钩子方法

使用场景
1.对于算法步骤确定的情况，但是算法步骤可能因为环境变化而改变，可以将可变的步骤使用抽象形式延迟到子类中去实现
2.当多个子类存在公共的行为时。可以将公共行为提取到父类中，将不同行为以抽象方法形式延迟在子类中实现