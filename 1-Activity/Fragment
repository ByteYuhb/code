Fragment回退栈管理：
1.不添加回退栈调用replace：每次都会替换所以的Fragment层级，按回退键不显示之前被替换的Fragment

2.添加回退栈调用replace，也会替换Fragment层级，但是不会清除实例，添加到回退栈中，每次按回退键可以显示之前被替换的Fragment
	2.1：addBackStack；

	新建Fragment最佳方式
	public class Fragment1 extends Fragment{  
	  private static String ARG_PARAM = "param_key"; 
		 private String mParam; 
		 private Activity mActivity; 
		 public void onAttach(Context context) {
			mActivity = (Activity) context; //此处获取Fragment依赖的Activity
			mParam = getArguments().getString(ARG_PARAM);  //获取参数 
		}
		 public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
			View root = inflater.inflate(R.layout.fragment_1, container, false);
			TextView view = root.findViewById(R.id.text);
			view.setText(mParam);
				 return root;
		}    
		 public static Fragment1 newInstance(String str) {
			Fragment1 frag = new Fragment1();
			Bundle bundle = new Bundle();
			bundle.putString(ARG_PARAM, str);
			fragment.setArguments(bundle);   //设置参数
			return fragment;
		}
	}
