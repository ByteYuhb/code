Retrofit2.0基本使用方法：
1.添加库依赖
	com.squareup.retrofit2:retrofit:2.9.0
	
	
2.创建接收服务器返回的类
	2.1.金山词霸数据返回说明JSON格式
	message
		baesInfo
			from:中文
			to:英文
			translate_result：翻译结果可以显示
		word_name:需要翻译的中文
	status	
3.创建用于描述网络请求的接口
	金山词霸基础接口：dict.iciba.com     
	GET   /dictionary/word/query/v2?
	client=1&
	timestamp=1637143127&
	isChangeTo=0&
	sign=63243e0fb77fa81e&
	uuid=d6ceb7789ff04ff69355cea0a3325e40&
	sv=android10&
	v=11.1.7&
	uid=&
	translateType=-1&
	identity=12&
	key=1000001&
	word=%25E4%25BD%25A0%25E5%25A5%25BD%25E5%25B0%258F%25E5%25A7%2590&
	signature=7cdc8cee1566bde7c34a817fbab31a20 
	
	HTTP/1.1
	
	3.1.注解类型
	3.2.注解说明
4.创建Retrofit实例
		//步骤4:创建Retrofit对象
        Retrofit retrofit = new Retrofit.Builder()
                .baseUrl("http://dict.iciba.com") // 设置 网络请求 Url
                .addConverterFactory(GsonConverterFactory.create()) //设置使用Gson解析(记得加入依赖)
                .build();

	4.1.数据解析器(Converter)
	4.2.网络请求适配器(CallAdapter)
5.创建网络请求接口实例
	GetRequest_Interface request = retrofit.create(GetRequest_Interface.class);
6.发送网络请求(同步或者异步)
	Call<Translation> call = request.getCall();
	call.enqueue(new Callback<Translation>() {
            //请求成功时回调
            @Override
            public void onResponse(Call<Translation> call, Response<Translation> response) {
                // 步骤7：处理返回的数据结果
                response.body().show();
            }

            //请求失败时回调
            @Override
            public void onFailure(Call<Translation> call, Throwable throwable) {
                System.out.println("连接失败");
            }
        });
7.处理返回数据