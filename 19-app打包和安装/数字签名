密钥算法：
1.消息摘要
 如MD5加密后的字符串就是一个消息摘要
	特点：可以保证数据完整性，但是无法保证数据安全性和不可篡改性
2.数字签名
	两部分组成：签名算法和验证算法
	知识点：公钥密码体制 对称加密算法和非对称加密算法
	1.公钥密码体制	：分为公钥和私钥和加密解密算法：常见为RSA算法
	
		加密：通过公钥使用加密算法对明文进行加密，得到密文
		解密：通过私钥使用解密算法对密文进行解密，得到明文
		
		公钥加密的内容一定需要知道私钥才能解出明文
		由管理员生成一套公钥和私钥。公钥和算法是公开的，私钥是只有管理员才有，保证数据不可以篡改
		
		
	2.对称加密算法：常见有DES 3DES AES等
		对称加密算法使用同一个密钥对明文进行加解密操作，所以需要保证密钥的安全性。
	
	3.非对称加密算法：常见有RSA算法
		加密使用的密钥和解密使用的密钥是不相同的。
		
		RSA：
			1.加密：终端使用公钥加密，服务端使用私钥解密：数据只能由服务端解密，可以保证不可篡改性。
			2.签名：服务端使用私钥加密，终端使用公钥解密：可以保证数据是由服务端使用私钥加密后的数据，且服务端不能否认这个结果
			
			
	数字签名简介：非对称加密技术 + 消息摘要技术的结合
		如果单独使用私钥进行加密只可以保证数据的完整性，无法保证数据的保密性且数据大时加密的效率速度很低，所以采用加密摘要算法生成的摘要消息弥补缺点
	具体步骤：
		发送者：
		1.发送者使用使用MD5获得摘要
		2.发送者使用私钥对摘要加密获得数字签名
		3.发送者需要将原始信息和数字签名一同发送给接收者
		接收者：
		4.接收者先把接收到的原始消息用同样的摘要算法摘要，形成“准签体”。
		5.对附加上的那段数字签名，使用预先得到的公钥解密。
		6.比较前两步所得到的两段消息是否一致：
			如果一致，则表明消息确实是期望的发送者发的，且内容没有被篡改过；
			相反，如果不一致，则表明传送的过程中一定出了问题，消息不可信。
