线程池优点：
1.避免线程的创建和销毁带来性能开销
2.设置线程池的数量，避免大量的线程抢占CPU的资源，导致设备卡顿
3.能对线程进行管理，如定时执行或者指定间隔时间执行

核心线程：一直存在，不会因为时间推移而消失
非核销线程：存在一定时间后会消失
阻塞队列：可以据需求设置，默认是FIFO，线程满了之后，会将任务按队列规则放入到队列中，有线程空出来后，就取出任务执行，

线程池工作原理：
1.首先在线程数低于核心线程时，有任务会创建一个核心线程，
2.核心线程都满了之后，会将后来任务放到阻塞队列中，按规则插入和退出
3.当阻塞队列也满了之后，但是没有超过最大线程数，则会重新创建一个新的非核心线程执行任务
4.如果超过了最大线程数，则直接拒绝任务，并调用 RejectedExecutionHandler.rejectedExecution()方法通知。

几种常见的线程池操作
线程池基本操作
ThreadPoolExecutor:

线程池快速创建：
FixedThreadPool：
线程数量固定，只有核心线程，没有非核心线程，所以也没有超时机制，队列也没有个数限制，执行长期的任务，性能好

CacheThreadPool：
没有核心线程，非核心线程没有大小限制，超时时间为60s，没有任务情况下，线程会在超时时间后回收，适合处理需要大量线程但是耗时时间较短的任务

SingleThreadPool：一个任务一个任务执行的场景
只有一个核心线程，没有非核心线程，他能确保所以任务都在一个线程中依次排队执行

ScheduledThreadPool：周期性执行任务的场景
有一定核心线程，对非核心线程没有大小限制，非核心线程在空闲状态下，会立即回收，适合周期性执行任务的场景，如倒计时等




